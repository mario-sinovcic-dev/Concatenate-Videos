services:
  app:
    image: concatinate-videos-api:${IMAGE_TAG} # TODO - get this from ECR if not running locally
    ports:
      - "8000:8000"
    volumes:
      - ./output:/app/output:rw
    environment:
      - NODE_ENV=development
    user: "node"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3 
    profiles:
      - api

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - local-infra
    profiles:
      - infra

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=video_jobs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local-infra
    profiles:
      - infra

volumes:
  postgres_data:

networks:
  local-infra:
    name: video-processor-local # TODO - append commit hash to name to avoid bumping in cicd pipelines
    driver: bridge 